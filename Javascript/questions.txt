Prepare questions related to scaling and optimization - system design overview

- map, filter, reduce, sort
- call, bind, apply
- array and object flattening with variations
- Convert all keys within an object into snake_case/camelCase
- Implement Promise/Promise-related APIs: Promise, Promise Race, Promis-all, Promis-any
- DOM APIs: document.getElementByClassName(), document.getElementByTagName()
- Implement Lodash functions: debounce(), throttle(), cloneDeep(), groupBy()
- Lodash's chunk()/map() with follow up of mapAsync(Promise.all) then mapWithChunksAsync
- Observer pattern - https://patterns.addy.ie/#observerpatternjavascript

Advanced - more senior candidates
- Write a templating engine that does variables substitution and simple conditionals.
- Implement JSON.stringify().
- Generate table of contents/outline from a HTML page (similar to Google Docs autogenerated outline).

------------------------------------------------------

Topics to Cover

1Ô∏è‚É£ Promises: Dive into asynchronous programming and how Promises are used to handle async operations in JavaScript.

2Ô∏è‚É£ Closures: Explore the power of closures and how they can be leveraged in front-end development to encapsulate data and create private variables.

3Ô∏è‚É£ Critical Rendering Path: Understand the five crucial steps involved in the Critical Rendering Path, which plays a vital role in how web pages are loaded and displayed in browsers.

4Ô∏è‚É£ Object Methods: Grasp the intricacies of Object methods like Object.create, Object.assign, and Object.freeze, and how they can be utilized for object manipulation and immutability.

5Ô∏è‚É£ Prototypical Chaining/Inheritance: Gain a deep understanding of prototypical inheritance in JavaScript and how it influences object relationships and code organization in front-end development.

6Ô∏è‚É£ Currying & Composing: Explore functional programming techniques like currying and composing, which promote code modularity, reusability, and cleaner front-end code.

7Ô∏è‚É£ setTimeout, setInterval & Promise Related Output Problems: Be ready to tackle problems related to timing functions and promises, as they are often encountered when handling animations, API requests, or managing complex user interactions.

8Ô∏è‚É£ Data Structures and Algorithms (DSA): Focus on mastering data structures like arrays, strings, and trees Additionally, understand concepts related to recursion, stacks, queues, priority queues, and dynamic programming, as they can come up in coding challenges.

9Ô∏è‚É£ Other JS Basic Concepts: Review important JavaScript concepts such as hoisting, scoping, closures, and variable declaration, as they form the foundation of front-end development.

üîü Polyfills: Familiarize yourself with polyfills for essential JavaScript methods like map, reduce, filter, bind, and Promise methods like Promise.all and Promise.allSettled. These polyfills ensure compatibility with older browsers and enhance the functionality of your front-end code.

üîü Tricky Problems: Prepare to tackle challenges related to 'this' and arrow functions, as they can have unexpected behavior in certain scenarios. Understanding their nuances will help you write clean and reliable front-end code.

------------------------------------------------------

https://topmate.io/arunm/787157
Interview.js
Table of Content

01. Implement Debounce - Easy
//// Asked in Meta, Google, Flipkart, IBM, MakeMyTrip
02. Implement Throttle - Medium
//// Asked in Google, Meta, Tekion
03. Implement Currying - Easy
//// Asked in Intuit, Tekion, Adobe, MakeMyTrip, Jio, Paytm
04. Implement Currying with Placeholders - Medium
//// Asked in Amazon, Flipkart, Yandex, Xiaomi, Vimeo, Gojek, Zeta
05. Deep Flatten I - Medium
//// Asked in Roblox, Disney+ Hotstar, Rippling
06. Deep Flatten II - Medium
//// Asked in CoinSwitch
07. Deep Flatten III - Easy
08. Deep Flatten IV - Hard
//// Asked in Meta, TikTok, Google, Apple, Yandex, Flipkart
09. Negative Indexing in Arrays (Proxies) - Medium
10. Implement a Pipe Method - Easy
//// Asked in Adobe
11. Implement Auto-retry Promises - Medium
//// Asked in Amazon, Flipkart, Adobe, Paypal, Swiggy
Interview.js
12. Implement Promise.all - Medium
//// Asked in TikTok, Lyft, Snapchat, Disney+ Hotstar, MakeMyTrip, Jio,
MindTickle, Zepto
13. Implement Promise.allSettled - Medium
//// Asked in Tekion, Adobe
14. Implement Promise.any - Medium
//// Asked in Zepto
15. Implement Promise.race - Easy
//// Asked in Yandex
16. Implement Promise.finally - Medium
//// Asked in Google
17. Implement Custom Javascript Promises - Super Hard
//// Asked in Amazon, Airbnb, Tekion, Cars24
18. Throttling Promises by Batching - Medium
19. Implement Custom Deep Equal - Hard
//// Asked in Google, Tekion
20. Implement Custom Object.assign - Medium
//// Asked in ServiceNow, Flipkart
21. Implement Custom JSON.stringify - Hard
//// Asked in Meta
22. Implement Custom JSON.parse - Super Hard
//// Asked in Meta
Interview.js
23. Implement Custom typeof operator - Medium
24. Implement Custom lodash _.get() - Medium
//// Asked in TikTok, Amazon, Quizizz, MindTickle
25. Implement Custom lodash _.set() - Medium
26. Implement Custom lodash _.omit() - Medium
27. Implement Custom String Tokenizer - Medium
28. Implement Custom setTimeout - Medium
//// Asked in Swiggy, Disney+ Hotstar
29. Implement Custom setInterval - Medium
//// Asked in Meta, TikTok, Swiggy
30. Implement Custom clearAllTimers - Easy
//// Asked in Meta
31. Implement Custom Event Emitter - Medium
//// Asked in Meta, Flipkart, Adobe, Jio, Tekion
32. Implement Custom Browser History - Medium
33. Implement Custom lodash _.chunk() - Medium
34. Implement Custom Deep Clone - Medium
//// Asked in Adobe, Tekion, Navi
35. Promisify the Async Callbacks - Easy
//// Asked in Amazon
Interview.js
36. Implement 'N' async tasks in Series - Hard
//// Asked in Jio, MakeMyTrip, Tekion
37. Implement 'N' async tasks in Parallel - Medium
//// Asked in Zepto, Paytm, BookMyShow
38. Implement 'N' async tasks in Race - Easy
39. Implement Custom Object.is() method - Easy
40. Implement Custom lodash _.partial() - Medium
//// Asked in Meesho
41. Implement Custom lodash _.once() - Medium
42. Implement Custom trim() operation - Medium
43. Implement Custom reduce() method - Medium
//// Asked in Amazon, Apple, Expedia, Paytm, ByteLearn
44. Implement Custom lodash _.memoize() - Medium
//// Asked in Meta, Intuit, Gameskraft
45. Implement Custom memoizeLast() method - Medium
46. Implement Custom call() method - Medium
//// Asked in Meesho
47. Implement Custom apply() method - Medium
48. Implement Custom bind() method - Medium
//// Asked in Rippling, Flipkart, BookMyShow
Interview.js
49. Implement Custom React "classnames" library - Medium
//// Asked in Meta
50. Implement Custom Redux used "Immer" library - Medium
51. Implement Custom Virtual DOM - I (Serialize) - Hard
//// Asked in Meta
52. Implement Custom Virtual DOM - II (Deserialize) - Medium
//// Asked in Meta
53. Implement Memoize/Cache identical API calls - Hard
